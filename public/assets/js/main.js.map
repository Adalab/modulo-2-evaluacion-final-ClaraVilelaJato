{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["'use strict';\n//Nos traemos de html los elementos para trabajar con ellos en JS\n\nconst inputShow = document.querySelector('.js-searchinput');\nconst searchButton = document.querySelector('.js-search-btn');\nconst reset = document.querySelector('.reset__btn');\nconst resultsContainer = document.querySelector('.js-list-results'); //selecciono el elem. de html donde pintaré los resultados\nconst paintedFavs = document.querySelector('.js-favs');\nlet apiDataShows = []; //array donde almaceno resultados\n\nlet favorites = [];\n\nfunction setInLocalStorage() {\n  // stringify me permite transformar a string el array de favorites\n  const stringShows = JSON.stringify(favorites);\n  //añadimos  al localStorage  los datos convertidos en string previamente\n  localStorage.setItem('favorites', stringShows);\n}\n\n//Función para hacer petición al servidor\n\nfunction fetchToApi() {\n  let inputShowValue = inputShow.value.toLocaleLowerCase();\n  fetch(`https://api.tvmaze.com/search/shows?q=${inputShowValue}`)\n    .then((response) => response.json())\n    .then((data) => {\n      apiDataShows = data;\n    });\n  paintShows();\n}\n\nfunction getLocalStorage() {\n  // obtenermos lo que hay en el LS\n  const localStorageLoaded = localStorage.getItem('favorites');\n  // siempre que cojo datos del local storage tengo que comprobar si son válidos\n  // es decir si es la primera vez que entro en la página\n  if (localStorageLoaded === null) {\n    // no tengo datos en el local storage, así que llamo al API\n    fetchToApi();\n  } else {\n    // sí tengo datos en el local storage,lo parseo a un array y\n    const arrayFavorites = JSON.parse(localStorageLoaded);\n    // lo guardo en la variable global de favorites\n    favorites = arrayFavorites;\n\n    paintFavs();\n  }\n}\n\nfunction handleSearch(ev) {\n  ev.preventDefault();\n  fetchToApi();\n}\n\n//Añadimos evento que desencadena la funcion fetch al pulsar el boton, nos traemos los datos del api\nsearchButton.addEventListener('click', handleSearch);\n\n// 1- -- Cuando carga la pagina\ngetLocalStorage();\n\n//Esta función es la encargada de manejar el evento click sobre cada uno de los li\nfunction handleShows(ev) {\n  const pickedShow = parseInt(ev.currentTarget.id);\n  const objectClickedShow = apiDataShows.find((show) => {\n    return show.show.id === pickedShow;\n  });\n  const favoritesFound = favorites.findIndex((fav) => {\n    return fav.show.id === pickedShow;\n  });\n\n  if (favoritesFound === -1) {\n    // añado al array de favoritos\n    favorites.push(objectClickedShow);\n  } else {\n    // si el findIndex me ha devuelto un número mayor o igual a 0 es que sí está en el array de favoritos\n    // quiero sacarlo de array de favoritos\n    // para utilizar splice necesito el índice del elemento que quiero borrar\n    // y quiero borrar un solo elemento por eso colocamos 1\n    favorites.splice(favoritesFound, 1);\n  }\n  console.log(favorites);\n  paintShows();\n  paintFavs();\n  setInLocalStorage();\n}\n\nfunction listenShows() {\n  const showList = document.querySelectorAll('.js-picked'); //le doy clase a los li que cree con la funcion paint\n  for (const show of showList) {\n    show.addEventListener('click', handleShows);\n  }\n}\n\n//codigo botón de reset\n\nfunction handleresetFavs() {\n  favorites = [];\n  paintedFavs.innerHTML = '';\n  localStorage.clear();\n}\n\nreset.addEventListener('click', handleresetFavs);\n\n//esta funcion la incluimos en la funcion fecth\nfunction paintShows() {\n  let html = '';\n  let favClass = '';\n  for (const eachSerie of apiDataShows) {\n    const oneSerie = eachSerie.show;\n    const isFav = isFavorite(oneSerie);\n    if (isFav) {\n      favClass = 'js-selected-list';\n    } else {\n      favClass = '';\n    }\n    let image = '';\n    if (oneSerie.image === null) {\n      image = 'https://via.placeholder.com/210x295/ffffff/666666/?text=TV';\n    } else {\n      image = oneSerie.image.medium;\n    }\n    html += `<li id=\"${oneSerie.id}\" class=\"serie__box js-picked ${favClass}\">`;\n    html += `<div class=\"border-show\">`;\n    html += `<img class=\"list-image\" src=\"${image}\" alt=\"${oneSerie.name}\">`;\n    html += `<h3 class=\"serie__name\">${oneSerie.name}</h3></li>`;\n    html += `</div>`;\n  }\n  resultsContainer.innerHTML = html;\n  listenShows();\n}\n\nfunction paintFavs() {\n  let html = '';\n  paintedFavs.innerHTML = '';\n  for (let favorite of favorites) {\n    const favoriteShow = favorite.show;\n    let image = '';\n    if (favoriteShow.image === null) {\n      image = 'https://via.placeholder.com/210x295/ffffff/666666/?text=TV';\n    } else {\n      image = favoriteShow.image.medium;\n    }\n    html += `<button value=\"x\" class=\"close-fav\">x</button><li id=\"${favoriteShow.id}\" class=\"fav__card\">`;\n    html += `<img class=\"fav__image\" src=\"${image}\" alt=\"${favoriteShow.name}\">`;\n    html += `<h3 class=\"fav__name\">${favoriteShow.name}</h3></li>`;\n  }\n  paintedFavs.innerHTML = html;\n}\n\n//funcion para añadir una clase a los favoritos que se encuentren el array cuando utilizo paintShows\n\nfunction isFavorite(oneSerie) {\n  const favoriteFound = favorites.find((fav) => {\n    return fav.show.id === oneSerie.id;\n  });\n  if (favoriteFound === undefined) {\n    return false;\n  } else {\n    return true;\n  }\n}\n"]}